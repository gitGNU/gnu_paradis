#!sh  this shebang is only added to enable colouring in text editors


` This is a template PKGBUILD file for the makepkg command `


# Package name: lower case a-z alphanumberical with non-initial, non-terminal hyphens
packageName=

# Short package description: one line, at most 80 characters
packageDesc="quoted \"hello word\" unquote"

# Long package description: full multiline description
packageDescription='First line
Second line
Third line'


# Package epoch number: non-negative, default is 0
packageEpoch=

# Package version
# Element syntax:
#  * STABIL
#  * STABIL-rcNUMBER
# STABIL: non-negative integers separated '.' (one dot)
# NUMBER: positive integer
packageVersion=

# Package release number: non-negative, default is 0
packageRelease=


# Upstream URL
url=''

# Package category
category=


# Whether the package contains source files
# Syntax:
#  * yes
#  * no
containsSource=yes

# Whether the package contains executable files
# Syntax:
#  * yes
#  * no
containsBinary=yes


# Package groups in which this package is included
groups=()

# Logical packages proviced by this package
# Element syntax:
#  * package
#  * package<version
#  * package<=version
#  * package=version
#  * package>=version
#  * package>version
provides=()

# Physical packages replaced by this package
# Element syntax:
#  * package
#  * package<version
#  * package<=version
#  * package=version
#  * package>=version
#  * package>version
replaces=()

# Package conflicting with this package
# Element syntax:
#  * package
#  * package<version
#  * package<=version
#  * package=version
#  * package>=version
#  * package>version
conflicts=()


# Files included in the package: / is paradis root, and / is also the file seperator (directories)
autofill files

# Which files of which to make backup
# Syntax:
#  * yes
#  * no
# Alternatively you can specify the file name as in $files
backup=()

# File checksums
# Element syntax: list of '|' (one pipe) separated algorithm:checksum,
# whether algorithm is in lowercase and checksum is in upper case
# dashless hexadecimal.
autofill checksums


# Manditory system dependencies
# Element syntax:
#  * package
#  * package<version
#  * package<=version
#  * package=version
#  * package>=version
#  * package>version
systemDependencies=(java-runtime>=1.4)

# Manditory paradis dependencies
# Element syntax:
#  * package
#  * package<version
#  * package<=version
#  * package=version
#  * package>=version
#  * package>version
dependencies=()

# Optional system dependencies
# Element syntax:
#  * package: purpose
#  * package<version: purpose
#  * package<=version: purpose
#  * package=version: purpose
#  * package>=version: purpose
#  * package>version: purpose
optionalSystemDependencies=()

# Optional paradis dependencies
# Element syntax:
#  * package: purpose
#  * package<version: purpose
#  * package<=version: purpose
#  * package=version: purpose
#  * package>=version: purpose
#  * package>version: purpose
optionalDependencies=()
    

# Supported architectures
# Examples:
#  * any
#  * ia-32
#  * x86-64
#  * ia-64
#  * ppc
#  * ppc64
#  * sparc32
#  * sparc64
#  * arm
#  * hppa
#  * mips
#  * sh
#  * s390
#  * s390x
#  * alpha
# An element may have the prefix ! (a bang) if it is known not to be supported
arch=(any)

# Supported operating systems
# Examples:
#  * any
#  * gnulinux
#  * gnuhurd
#  * macos
#  * macos 9
#  * macosx
#  * windows
#  * windows nt
#  * windows 7
# An element may have the prefix ! (a bang) if it is known not to be supported
os=(gnulinux gnuhurd)


# Package UUID: used to ensure uniqueness of package independent on version, epoch and release
autofill uuid


# Licenses this packages uses
licenses=('GNU General Public License v3 or later')

# Whether the package is Free Software
# Syntax:
#  * yes
#  * no
isFreeSoftware=no
`Make sure to correct this`

# Whether the package is GNU General Public License v3+ compatible
# Syntax:
#  * yes
#  * no
isGPL3compat=no
`Make sure to correct this`


#Free Software Licenses:
`
   *marks licenses that is known not to allow linking with code using a different license

    COMPATIBLE WITH GNU GENERAL PUBLIC LICENSE
    
   *GNU General Public License
    GNU Lesser General Public License
    Clarified Artistic License (draft 2.0)
    Artistic License 2.0
   *Berkeley Database License
    modified BSD license
    Boost Software License
   *CeCILL
    Cryptix General License
    Do What The Fuck You Want To Public License
    Eiffel Forum License version 2
    Fair Licence
    Intel Open Source License
    ISC license
    MIT license
    Mozilla Public License version 2.0
    Python Software Foundation License 2.0.1; 2.1.1 and newer
    W3C Software Notice and License
    zlib/libpng license
    Zope Public License version 2.0

    COMPATIBLE WITH GNU GENERAL PUBLIC LICENSE 3, but not 2

   *GNU Affero General Public License version 3
    Apache License version 2
    Educational Community License
    XFree86 1.1 License

    NOT COMPATIBLE WITH GNU GENERAL PUBLIC LICENSE

    Academic Free License
    Apache License version 1
    Apache License version 1.1
    Apple Public Source License version 2.0
    original BSD license
    Common Development and Distribution License
    Common Public License
    Creative Commons licenses (Tags: by & sa, but not nc & nd)
    Eclipse Public License
    IBM Public License
    LaTeX Project Public License
    Microsoft Public License
    Microsoft Reciprocal License
    Mozilla Public License version 1.1
    Netscape Public License
    Open Software License
    OpenSSL license
    PHP License
   *Q Public License
    Sun Industry Standards Source License
    Sun Public License
    Zope Public License version 1.0
`
